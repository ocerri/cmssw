#ifndef DECAYTREEFITTER_CONFIG_H
#define DECAYTREEFITTER_CONFIG_H

#include "TrackingTools/Records/interface/TransientTrackRecord.h"
#include "TrackingTools/TransientTrack/interface/TransientTrack.h"
#include "TrackingTools/TransientTrack/interface/TransientTrackBuilder.h"
#include "MagneticField/Engine/interface/MagneticField.h"
#include "MagneticField/Records/interface/IdealMagneticFieldRecord.h"

namespace DecayTreeFitter
{
  class Configuration
  {
  public:
  Configuration(bool forceFitAll=true,
                edm::ESHandle<TransientTrackBuilder> theTTBuilder,
                edm::ESHandle<MagneticField> bFieldHandle,
               )
    : m_forceFitAll(forceFitAll),
      m_stateprovider(stateprovider),
      m_useTrackTraj( true )
	{}

    const ITrackStateProvider* stateProvider() const { return m_stateprovider ; }

    bool forceFitAll() const { return m_forceFitAll ; }
    bool useTrackTraj() const { return m_useTrackTraj ; }

  private:
    bool m_forceFitAll ;
    const edm::ESHandle<TransientTrackBuilder> m_stateprovider ;
    const edm::ESHandle<MagneticField> m_MagneticField ;
    bool m_useTrackTraj ;
  } ;
}

#endif
